// Code generated by "cue exp gengotypes"; DO NOT EDIT.

package projects

import (
	"github.com/jmgilman/sow/cli/schemas/phases"
	"time"
)

// StandardProjectState defines the schema for a standard project type.
//
// This project type follows the 4-phase model:
// Planning → Implementation → Review → Finalize
type StandardProjectState struct {
	// Statechart metadata (tracks state machine position)
	Statechart struct {
		// Current state in the lifecycle state machine
		Current_state string `json:"current_state"`
	} `json:"statechart"`

	// Project metadata
	Project struct {
		// Project type identifier
		Type string `json:"type"`

		// Kebab-case project identifier
		Name string `json:"name"`

		// Git branch name this project belongs to
		Branch string `json:"branch"`

		// Human-readable project description
		Description string `json:"description"`

		// Optional GitHub issue number this project is linked to
		Github_issue *int64 `json:"github_issue,omitempty"`

		// ISO 8601 timestamps
		Created_at time.Time `json:"created_at"`

		Updated_at time.Time `json:"updated_at"`
	} `json:"project"`

	// 4-phase structure (composing reusable phase definitions)
	Phases struct {
		// Phase 1: Planning (required, human-led)
		Planning phases.Phase `json:"planning"`

		// Phase 2: Implementation (required, AI-autonomous)
		Implementation phases.Phase `json:"implementation"`

		// Phase 3: Review (required, AI-autonomous)
		Review phases.Phase `json:"review"`

		// Phase 4: Finalize (required, AI-autonomous)
		Finalize phases.Phase `json:"finalize"`
	} `json:"phases"`
}

// ProjectState is the root discriminated union for all project types.
// For MVP, only StandardProjectState exists. Future project types
// (DesignProjectState, SpikeProjectState, etc.) will be added here.
type ProjectState StandardProjectState

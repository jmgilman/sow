# Test: E2E Refs Workflow
# Purpose: Verify refs commands exist and basic structure
# Exercises: refs init, refs list, refs status commands
#
# Note: Full refs workflow (add/remove) requires writable HOME which testscript
# doesn't provide. This test verifies command structure and initialization only.

# =====================================
# Setup
# =====================================
exec git init
exec git config user.email 'test@example.com'
exec git config user.name 'Test User'
exec git commit --allow-empty -m 'Initial commit'
exec git checkout -b feat/refs-test
exec sow init

# =====================================
# Refs Init
# =====================================
# Initialize refs (should be idempotent after sow init)
exec sow refs init
stderr 'initialized successfully'

# Verify refs structure exists
exists .sow/refs
exists .sow/refs/index.json

# =====================================
# List References (Empty)
# =====================================
exec sow refs list
stderr 'No refs'

# =====================================
# Refs Status (Empty)
# =====================================
exec sow refs status
stderr 'No refs'

# =====================================
# Create Project for Context
# =====================================
exec sow agent init refs-project --description 'Test refs commands'
# Project starts at PlanningActive
# Complete planning with task list artifact
exec mkdir -p .sow/project/artifacts
exec sh -c 'echo "# Task List" > .sow/project/artifacts/task-list.md'
exec sow agent artifact add project/artifacts/task-list.md --metadata type=task_list
exec sow agent artifact approve project/artifacts/task-list.md
exec sow agent complete

exec sow agent task add 'Test task' --description 'Testing refs commands'
stderr '✓ Created task 010'

exec sow agent task approve

# =====================================
# Complete Workflow
# =====================================
exec sow agent task update 010 --status in_progress
exec sow agent task update 010 --status completed
# Auto-transitions to review when all tasks complete
exec mkdir -p .sow/project/phases/review/reports
exec sh -c 'echo "# Review" > .sow/project/phases/review/reports/001.md'
exec sow agent artifact add project/phases/review/reports/001.md --metadata type=review --metadata assessment=pass
exec sow agent artifact approve project/phases/review/reports/001.md
exec sow agent complete
# Transitions to finalize
exec sow agent complete
# Finalize complete
exec sow agent delete --force

# =====================================
# Final Verification
# =====================================
! exists .sow/project
exists .sow/refs
exec sow validate
stderr '✓ All validations passed'

# Test file ref lifecycle: add, list, remove

# Set HOME to test workspace so cache can be created
env HOME=$WORK

exec git init
exec git config user.email 'test@test.com'
exec git config user.name 'Test'
exec sow init

# Create a test directory with content
mkdir test-docs
exec sh -c 'echo documentation > test-docs/README.md'

# Add file ref using absolute path (will be converted to file:// URL)
exec sow refs add $WORK/test-docs --id=docs --link=docs --semantic=knowledge --description='Test docs'
stderr '✓ Added file ref:'
stderr 'local index'

# List refs
exec sow refs list
stdout 'docs'
stdout 'knowledge'
stdout 'test-docs'

# Verify symlink exists in workspace
exists .sow/refs/docs

# Verify cache symlink was created
exists $HOME/.cache/sow/refs/file

# Verify content is accessible through workspace symlink
exists .sow/refs/docs/README.md

# Test list filtering
exec sow refs list --type=file
stdout 'docs'

exec sow refs list --semantic=knowledge
stdout 'docs'

# Remove ref with force flag (skip confirmation)
exec sow refs remove docs --force
stderr '✓ Removed'
stderr 'local index'

# Verify workspace symlink removed
! exists .sow/refs/docs

# Verify list shows no refs
exec sow refs list
stderr 'No refs configured'

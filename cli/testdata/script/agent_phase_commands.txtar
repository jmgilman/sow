# Test: Agent Phase Management Commands
# Purpose: Test phase-level operations
# Coverage: status, info, set, complete, error cases

# =====================================
# Setup
# =====================================
exec git init
exec git config user.email 'test@example.com'
exec git config user.name 'Test User'
exec git commit --allow-empty -m 'Initial commit'
exec git checkout -b feat/phase-test
exec sow init
exec sow agent init phase-test --description 'Test phase commands'

# =====================================
# Status Command - Planning Phase
# =====================================

exec sow agent status
stderr 'Project: phase-test'
stderr 'Branch: feat/phase-test'
stderr 'Active Phase: planning'
stderr 'Next Actions:'

# =====================================
# Info Command - Planning Phase
# =====================================

exec sow agent info
stderr 'Phase: planning'
stderr 'Status:'

# =====================================
# Set Command - Planning Phase
# =====================================

# Set custom metadata field
exec sow agent set planning_notes 'Initial planning discussion complete'
stderr '✓ Set planning_notes'

# Verify field set in state
exec cat .sow/project/state.yaml
stdout 'planning_notes: Initial planning discussion complete'

# Set integer field
exec sow agent set review_count 0
stderr '✓ Set review_count'

exec cat .sow/project/state.yaml
stdout 'review_count: 0'

# Set boolean field
exec sow agent set needs_docs true
stderr '✓ Set needs_docs'

exec cat .sow/project/state.yaml
stdout 'needs_docs: true'

# =====================================
# Complete Command - Planning Phase
# =====================================

# Try to complete without required artifact (should fail)
! exec sow agent complete
stderr 'task list artifact must be approved'

# Add and approve task list
exec mkdir -p .sow/project/artifacts
exec sh -c 'echo "# Tasks" > .sow/project/artifacts/tasks.md'
exec sow agent artifact add project/artifacts/tasks.md --metadata type=task_list
exec sow agent artifact approve project/artifacts/tasks.md

# Now complete should work
exec sow agent complete
stderr '✓ Completed planning phase'

# =====================================
# Status Command - Implementation Planning
# =====================================

exec sow agent status
stderr 'Active Phase: implementation'

# =====================================
# Info Command - Implementation Phase
# =====================================

exec sow agent info
stderr 'Phase: implementation'

# =====================================
# Set Command - Implementation Phase
# =====================================

# Set planner metadata
exec sow agent set planner_used true
stderr '✓ Set planner_used'

# This is the critical metadata for task approval
exec sow agent set tasks_approved true
stderr '✓ Set tasks_approved'

exec cat .sow/project/state.yaml
stdout 'planner_used: true'
stdout 'tasks_approved: true'

# =====================================
# Test Task Creation and Status Display
# =====================================

# Add tasks
exec sow agent task add 'Task 1' --description 'First'
exec sow agent task add 'Task 2' --description 'Second'
exec sow agent task add 'Task 3' --description 'Third'

# Check status shows task counts
exec sow agent status
stderr 'Tasks: 3 total'
stderr '○ 3 pending'

# Update some tasks
exec sow agent task approve
exec sow agent task update 010 --status in_progress

# Check status shows updated counts
exec sow agent status
stderr 'Tasks: 3 total'
stderr '⟳ 1 in progress'
stderr '○ 2 pending'

# Complete one task
exec sow agent task update 010 --status completed

exec sow agent status
stderr 'Tasks: 3 total'
stderr '✓ 1 completed'
stderr '○ 2 pending'

# =====================================
# Complete All Tasks to Transition
# =====================================

exec sow agent task update 020 --status completed
exec sow agent task update 030 --status completed

# Should auto-transition to review
exec cat .sow/project/state.yaml
stdout 'current_state: ReviewActive'

# =====================================
# Status Command - Review Phase
# =====================================

exec sow agent status
stderr 'Active Phase: review'

# =====================================
# Set Command - Review Phase
# =====================================

exec sow agent set iteration 1
exec sow agent set reviewer 'human'

exec cat .sow/project/state.yaml
stdout 'iteration: 1'
stdout 'reviewer: human'

# =====================================
# Complete Review Phase
# =====================================

# Try to complete without review artifact (should fail based on guard)
# Actually, complete will work but state machine won't transition
exec mkdir -p .sow/project/phases/review/reports
exec sh -c 'echo "# Review" > .sow/project/phases/review/reports/001.md'
exec sow agent artifact add project/phases/review/reports/001.md --metadata type=review --metadata assessment=pass
exec sow agent artifact approve project/phases/review/reports/001.md

exec sow agent complete
stderr '✓ Completed review phase'

# Verify transition to finalize
exec cat .sow/project/state.yaml
stdout 'current_state: FinalizeDocumentation'

# =====================================
# Status Command - Finalize Phase
# =====================================

exec sow agent status
stderr 'Active Phase: finalize'

# =====================================
# Complete Finalize Phase
# =====================================

exec sow agent complete
stderr '✓ Completed finalize phase'

# =====================================
# Cleanup
# =====================================
exec sow agent delete --force
! exists .sow/project

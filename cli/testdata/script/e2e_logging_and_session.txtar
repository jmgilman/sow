# Test: E2E Logging and Session Info
# Purpose: Test logging commands and context detection
# Exercises: sow log, sow agent session-info, project/task context detection

# =====================================
# Setup
# =====================================
exec git init
exec git config user.email 'test@example.com'
exec git config user.name 'Test User'
exec git commit --allow-empty -m 'Initial commit'
exec git checkout -b feat/logging-test
exec sow init

# =====================================
# Session Info - No Project
# =====================================
exec sow agent session-info
stderr 'No active project'

# =====================================
# Project Initialization
# =====================================
exec sow agent init logging-project --description 'Test logging'
# Project starts at DiscoveryDecision - enable and complete optional phases to reach implementation
exec sow agent enable discovery
exec sow agent complete
exec sow agent enable design
exec sow agent complete

# =====================================
# Session Info - With Project
# =====================================
exec sow agent session-info
stderr 'logging-project'
stderr 'feat/logging-test'

# =====================================
# Create Task for Task-Level Logging
# =====================================
exec sow agent task add 'Implement feature' --description 'Core work'
stderr '✓ Created task 010'

exists .sow/project/phases/implementation/tasks/010/log.md

# =====================================
# Complete Workflow
# =====================================
exec sow agent task approve
exec sow agent task update 010 --status in_progress
exec sow agent task update 010 --status completed
# Auto-transitions to review
exec mkdir -p .sow/project/phases/review/reports
exec sh -c 'echo "# Review" > .sow/project/phases/review/reports/001.md'
exec sow agent artifact add project/phases/review/reports/001.md --metadata type=review --metadata assessment=pass
exec sow agent artifact approve project/phases/review/reports/001.md
exec sow agent complete
# Transitions to finalize
exec sow agent complete
# Finalize complete
exec sow agent delete --force

# =====================================
# Final Verification
# =====================================
! exists .sow/project
exec sow validate
stderr '✓ All validations passed'

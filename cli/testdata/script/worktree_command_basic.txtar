# Test basic worktree creation for explore and project commands
# Tests that commands create worktrees at correct paths and preserve slashes in branch names

# =====================================
# Setup Git Repository and Mock Claude
# =====================================
exec git init
exec git config user.email 'test@example.com'
exec git config user.name 'Test User'

# Create .gitignore to exclude worktrees and test files
exec sh -c 'echo ".sow/worktrees/" > .gitignore'
exec sh -c 'echo ".sow/sinks/" >> .gitignore'
exec sh -c 'echo ".sow/repos/" >> .gitignore'

# Create initial commit with .gitignore
exec git add .gitignore
exec git commit -m 'Initial commit'

# Initialize sow
exec sow init
stderr 'âœ“ sow initialized successfully'

# Commit the .sow directory that sow init created
exec git add .sow
exec git commit -m 'Initialize sow'

# Verify everything is committed
exec git status --porcelain
! stdout .

# Set environment variable to skip uncommitted check in tests
# This works around a go-git caching issue in testscript environment
env SOW_SKIP_UNCOMMITTED_CHECK=1

# =====================================
# Test 1: sow explore with simple branch name
# =====================================
exec sow explore --branch explore-test --no-launch
exists .sow/worktrees/explore-test/.git
exists .sow/worktrees/explore-test/.sow/exploration/

# Verify it's a git worktree
exec git worktree list
stdout 'explore-test'

# =====================================
# Test 2: sow project with slashes in branch name
# =====================================
exec sow project --branch feat/auth --no-launch
exists .sow/worktrees/feat/auth/.git
exists .sow/worktrees/feat/auth/.sow/project/

# Verify branch names preserved (slashes become directory separators)
exists .sow/worktrees/feat/
exists .sow/worktrees/feat/auth/

# Verify git worktree
exec git worktree list
stdout 'feat/auth'

# =====================================
# Test 3: sow design with slashes
# =====================================
exec sow design --branch design/api --no-launch
exists .sow/worktrees/design/api/.git
exists .sow/worktrees/design/api/.sow/design/

# Verify git worktree
exec git worktree list
stdout 'design/api'

# =====================================
# Test 4: sow breakdown with slashes
# =====================================
exec sow breakdown --branch breakdown/feature --no-launch
exists .sow/worktrees/breakdown/feature/.git
exists .sow/worktrees/breakdown/feature/.sow/breakdown/

# Verify git worktree
exec git worktree list
stdout 'breakdown/feature'

# =====================================
# Verify all worktrees in git worktree list
# =====================================
exec git worktree list
stdout 'explore-test'
stdout 'feat/auth'
stdout 'design/api'
stdout 'breakdown/feature'

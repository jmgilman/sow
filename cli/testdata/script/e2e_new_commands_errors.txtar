# Test: E2E New Commands - Error Handling
# Purpose: Validate error handling for new simplified commands
# Exercises: Invalid operations, missing projects, wrong phase states

# =====================================
# Setup
# =====================================
exec git init
exec git config user.email 'test@example.com'
exec git config user.name 'Test User'
exec git commit --allow-empty -m 'Initial commit'
exec git checkout -b feat/error-test
exec sow init

# =====================================
# Test commands without active project
# =====================================

# status without project should fail
! exec sow agent status
stderr 'no active project'

# info without project should fail
! exec sow agent info --phase discovery
stderr 'no active project'

# enable without project should fail
! exec sow agent enable discovery
stderr 'no active project'

# skip without project should fail
! exec sow agent skip
stderr 'no active project'

# complete without project should fail
! exec sow agent complete
stderr 'no active project'

# artifact without project should fail
! exec sow agent artifact add some/path.md
stderr 'no active project'

# set without project should fail
! exec sow agent set discovery_type feature
stderr 'no active project'

# =====================================
# Create project for further tests
# =====================================
exec sow agent init error-test --description 'Test error handling'

# =====================================
# Test enable command errors
# =====================================

# Can't enable implementation (not optional)
! exec sow agent enable implementation
stderr 'cannot be enabled'

# Can't enable review (not optional)
! exec sow agent enable review
stderr 'cannot be enabled'

# Can't enable finalize (not optional)
! exec sow agent enable finalize
stderr 'cannot be enabled'

# =====================================
# Test skip and complete command errors
# =====================================

# At decision state (DiscoveryDecision), no active phase
! exec sow agent skip
stderr 'no active phase'

! exec sow agent complete
stderr 'no active phase'

# Enable discovery, then complete (not skip - can't skip after enabling)
exec sow agent enable discovery
exec sow agent complete

# At DesignDecision, skip to ImplementationPlanning
# (no need to enable design, just advance)
# Actually, we're at a decision state, so no active phase again
exec sow agent enable design
exec sow agent complete

# Now at ImplementationPlanning (active implementation phase)
# Can't skip required phase
! exec sow agent skip
stderr 'cannot be skipped'

# =====================================
# Test artifact command errors
# =====================================

# Can't add artifact to implementation (doesn't support artifacts)
! exec sow agent artifact add some/path.md
stderr 'not support artifacts'

# =====================================
# Test set command errors
# =====================================

# Need a fresh project for set command tests
exec sow agent delete --force
exec sow agent init set-test --description 'Test set command errors'

# Can't set fields when at decision state (no active phase)
! exec sow agent set discovery_type feature
stderr 'no active phase'

# Enable discovery to have an active phase, then we can set fields
exec sow agent enable discovery
exec sow agent set discovery_type feature
exec sow agent complete

# Enable and complete design
exec sow agent enable design
exec sow agent complete

# Now in implementation - can set fields
exec sow agent task add 'Test' --description 'Test'
exec sow agent task approve

# Complete implementation to move to review
exec sow agent task update 010 --status completed
# All tasks complete, auto-transitions to review

# Add and approve review artifact
exec mkdir -p .sow/project/phases/review/reports
exec sh -c 'echo "# Review" > .sow/project/phases/review/reports/001.md'
exec sow agent artifact add project/phases/review/reports/001.md --metadata type=review --metadata assessment=pass
exec sow agent artifact approve project/phases/review/reports/001.md

# Complete review and finalize
exec sow agent complete
exec sow agent complete
exec sow agent delete --force

# Create new project for artifact testing
exec sow agent init artifact-test --description 'Test artifacts'
exec sow agent enable discovery

# Test artifact add without approval
exec mkdir -p .sow/project/phases/discovery/research
exec sh -c 'echo "test" > .sow/project/phases/discovery/research/test.md'

exec sow agent artifact add project/phases/discovery/research/test.md
stderr '✓ Added artifact'

# Verify it needs approval
exec cat .sow/project/state.yaml
stdout 'approved: false'

# Approve the first artifact
exec sow agent artifact approve project/phases/discovery/research/test.md
stderr '✓ Approved artifact'

# Test adding and approving a second artifact
exec sh -c 'echo "test2" > .sow/project/phases/discovery/research/test2.md'
exec sow agent artifact add project/phases/discovery/research/test2.md
exec sow agent artifact approve project/phases/discovery/research/test2.md

# =====================================
# Cleanup
# =====================================
exec sow agent complete
# At DesignDecision - enable and complete design
exec sow agent enable design
exec sow agent complete
exec sow agent delete --force

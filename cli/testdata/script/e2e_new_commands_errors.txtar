# Test: E2E New Commands - Error Handling
# Purpose: Validate error handling for new simplified commands
# Exercises: Invalid operations, missing projects, wrong phase states

# =====================================
# Setup
# =====================================
exec git init
exec git config user.email 'test@example.com'
exec git config user.name 'Test User'
exec git commit --allow-empty -m 'Initial commit'
exec git checkout -b feat/error-test
exec sow init

# =====================================
# Test commands without active project
# =====================================

# status without project should fail
! exec sow agent status
stderr 'no active project'

# info without project should fail
! exec sow agent info --phase discovery
stderr 'no active project'

# enable without project should fail
! exec sow agent enable discovery
stderr 'no active project'

# skip without project should fail
! exec sow agent skip discovery
stderr 'no active project'

# complete without project should fail
! exec sow agent complete
stderr 'no active project'

# artifact without project should fail
! exec sow agent artifact add some/path.md
stderr 'no active project'

# set without project should fail
! exec sow agent set discovery_type feature
stderr 'no active project'

# =====================================
# Create project for further tests
# =====================================
exec sow agent init error-test --description 'Test error handling'

# =====================================
# Test enable command errors
# =====================================

# Can't enable implementation (not optional)
! exec sow agent enable implementation
stderr 'only discovery and design phases can be enabled'

# Can't enable review (not optional)
! exec sow agent enable review
stderr 'only discovery and design phases can be enabled'

# Can't enable finalize (not optional)
! exec sow agent enable finalize
stderr 'only discovery and design phases can be enabled'

# Enable discovery requires --type flag
! exec sow agent enable discovery
stderr '--type flag is required'

# =====================================
# Test skip command errors
# =====================================

# Can't skip implementation (not optional)
! exec sow agent skip implementation
stderr 'only discovery and design phases can be skipped'

# Skip discovery first
exec sow agent skip discovery

# Can't skip discovery again (already skipped)
! exec sow agent skip discovery
stderr 'state transition failed'

# =====================================
# Test complete command errors
# =====================================

# Can't complete design when in pending state
! exec sow agent complete
stderr 'phase design is in decision state'

# Skip to implementation
exec sow agent skip design

# Can't complete implementation without tasks
! exec sow agent complete
stderr 'state transition failed'

# =====================================
# Test artifact command errors
# =====================================

# Can't add artifact to implementation (doesn't support artifacts)
! exec sow agent artifact add some/path.md
stderr 'phase implementation does not support artifacts'

# =====================================
# Test set command errors
# =====================================

# Need a fresh project for set command tests
exec sow agent delete --force
exec sow agent init set-test --description 'Test set command errors'

# Can't set fields when phase is in decision state (discovery pending)
! exec sow agent set discovery_type feature
stderr 'phase discovery is in decision state'

# Skip discovery and design to get to implementation
exec sow agent skip discovery
exec sow agent skip design

# Now in implementation - can set fields
exec sow agent task add 'Test' --description 'Test'
exec sow agent task approve

# Test setting unknown field
! exec sow agent set unknown_field value
stderr 'field unknown_field not found'

# Test setting wrong type (string for bool)
! exec sow agent set tasks_approved not_a_bool
stderr 'invalid boolean value'

# Complete implementation to move to review
exec sow agent task update 010 --status completed
# All tasks complete, auto-transitions to review
exec sow agent review add reports/001.md --assessment pass
exec sow agent review approve 001

# =====================================
# Test artifact validation
# =====================================

# Complete finalize phase and delete current project
exec sow agent finalize complete documentation
exec sow agent finalize complete checks
exec sow agent delete --force

# Create new project for artifact testing
exec sow agent init artifact-test --description 'Test artifacts'
exec sow agent enable discovery --type feature

# Test artifact add without approval
exec mkdir -p .sow/project/phases/discovery/research
exec sh -c 'echo "test" > .sow/project/phases/discovery/research/test.md'

exec sow agent artifact add project/phases/discovery/research/test.md
stderr 'âœ“ Added artifact to discovery phase'

# Verify it needs approval
exec cat .sow/project/state.yaml
stdout 'approved: false'

# Test artifact add with approval
exec sh -c 'echo "test2" > .sow/project/phases/discovery/research/test2.md'

exec sow agent artifact add project/phases/discovery/research/test2.md --approved
stderr 'approved'

exec cat .sow/project/state.yaml
stdout 'approved: true'

# =====================================
# Cleanup
# =====================================
# Approve all artifacts before completing
exec sow agent artifact approve project/phases/discovery/research/test.md
exec sow agent artifact approve project/phases/discovery/research/test2.md
exec sow agent complete
exec sow agent skip design
exec sow agent delete --force

# Test git ref with subpath option

# Set HOME to test workspace so cache can be created
env HOME=$WORK

exec git init
exec git config user.email 'test@test.com'
exec git config user.name 'Test'
exec sow init

# Create a git repo with subdirectories
mkdir source-repo
cd source-repo
exec git init
exec git config user.email 'test@test.com'
exec git config user.name 'Test'

# Create directory structure
mkdir docs
mkdir code
exec sh -c 'echo "documentation" > docs/README.md'
exec sh -c 'echo "more docs" > docs/GUIDE.md'
exec sh -c 'echo "source code" > code/main.go'
exec sh -c 'echo "root file" > root.txt'
exec git add .
exec git commit -m 'Initial commit'

cd ..

# Add ref pointing to just the docs subdirectory
exec sow refs git add file://$WORK/source-repo --id=repo-docs --path=docs --semantic=knowledge --description='Repo docs only'
stderr '✓ Added git ref: repo-docs'

# Verify workspace symlink points to the subpath
exists .sow/refs/repo-docs

# Verify we have the docs files
exists .sow/refs/repo-docs/README.md
exists .sow/refs/repo-docs/GUIDE.md
exec cat .sow/refs/repo-docs/README.md
stdout 'documentation'

# Verify we DON'T have files from other directories
! exists .sow/refs/repo-docs/main.go
! exists .sow/refs/repo-docs/root.txt

# List should show path info
exec sow refs git list
stdout 'repo-docs'
stdout 'path: docs'

# Remove the ref
exec sow refs git remove repo-docs
stderr '✓ Removed git ref: repo-docs'

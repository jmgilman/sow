# Test: E2E Minimal Path
# Purpose: Shortest valid workflow through the system
# Exercises: Skip discovery/design, minimal task, review pass, finalize, delete

# =====================================
# Setup
# =====================================
exec git init
exec git config user.email 'test@example.com'
exec git config user.name 'Test User'
exec git commit --allow-empty -m 'Initial commit'
exec git checkout -b feat/minimal-test
exec sow init
stderr '✓ sow initialized successfully'

# Verify sow structure created
exists .sow
exists .sow/knowledge
exists .sow/refs
exists .sow/.version
exists .sow/refs/index.json

# =====================================
# Project Initialization
# =====================================
exec sow agent project init minimal-project --description 'Minimal test project'
stderr '✓ Initialized project ''minimal-project'''

# Verify project structure created
exists .sow/project
exists .sow/project/state.yaml
exists .sow/project/log.md
exists .sow/project/context
exists .sow/project/phases/implementation/tasks
exists .sow/project/phases/review/reports

# Verify initial state validates
exec sow validate
stderr '✓ All validations passed'

# =====================================
# Skip Optional Phases
# =====================================
# Skip discovery phase
exec sow agent project phase skip discovery
stderr '✓ Skipped discovery phase'

# Skip design phase
exec sow agent project phase skip design
stderr '✓ Skipped design phase'

# Verify state after skipping phases
exec sow validate
stderr '✓ All validations passed'

# =====================================
# Implementation Phase
# =====================================
# Add single task
exec sow agent task add 'Implement feature' --description 'Add core functionality'
stderr '✓ Created task 010'

# Verify task directory created
exists .sow/project/phases/implementation/tasks/010
exists .sow/project/phases/implementation/tasks/010/state.yaml
exists .sow/project/phases/implementation/tasks/010/description.md
exists .sow/project/phases/implementation/tasks/010/log.md

# Approve task plan
exec sow agent project phase approve implementation
stderr '✓ Approved implementation phase plan'

# Update task to in_progress
exec sow agent task update 010 --status in_progress
stderr '✓ Updated task 010'

# Update task to completed
exec sow agent task update 010 --status completed
stderr '✓ Updated task 010'

# Verify state transitions to review
exec sow validate
stderr '✓ All validations passed'

# =====================================
# Review Phase
# =====================================
# Add passing review report
exec sow agent project review add-report reports/001-review.md --assessment pass
stderr '✓ Added review report 001'

# Approve review report
exec sow agent project review approve 001
stderr '✓ Approved review report 001'

# Verify review report added
exec cat .sow/project/state.yaml
stdout 'assessment: pass'

# =====================================
# Finalize Phase
# =====================================
# Complete documentation subphase
exec sow agent project finalize complete documentation
stderr '✓ Completed documentation subphase'

# Complete checks subphase
exec sow agent project finalize complete checks
stderr '✓ Completed checks subphase'

# =====================================
# Project Deletion
# =====================================
# Delete project
exec sow agent project delete --force
stderr 'Deleted project'

# Verify project directory removed
! exists .sow/project

# Verify sow structure still exists
exists .sow
exists .sow/knowledge
exists .sow/refs

# =====================================
# Final Validation
# =====================================
exec sow validate
stderr '✓ All validations passed'

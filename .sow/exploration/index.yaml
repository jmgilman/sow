exploration:
    topic: worktrees
    branch: explore/worktrees
    created_at: 2025-10-24T19:28:42.575981-07:00
    status: completed
topics:
    - topic: Worktree isolation model - how worktrees share git data but isolate working directories
      status: completed
      added_at: 2025-10-24T19:36:00.945987-07:00
      completed_at: 2025-10-24T19:36:53.402076-07:00
      related_files:
        - worktree-isolation-model.md
      notes: ""
    - topic: Multi-session state management - handling multiple .sow/project or exploration contexts
      status: completed
      added_at: 2025-10-24T19:36:01.005572-07:00
      completed_at: 2025-10-24T20:15:10.177781-07:00
      related_files:
        - multi-session-state-management.md
      notes: ""
    - topic: Sow integration patterns - making sow start worktree-aware
      status: completed
      added_at: 2025-10-24T19:36:01.053577-07:00
      completed_at: 2025-10-27T10:01:26.837229-07:00
      related_files:
        - worktree-integration-patterns.md
      notes: ""
    - topic: Worktree lifecycle and cleanup - creation, switching, and cleanup strategies
      status: completed
      added_at: 2025-10-24T19:36:01.100561-07:00
      completed_at: 2025-10-27T10:39:02.532957-07:00
      related_files: []
      notes: ""
    - topic: go-git worktree support - what's implemented and what requires git CLI
      status: completed
      added_at: 2025-10-27T10:41:33.35245-07:00
      completed_at: 2025-10-27T10:47:39.286569-07:00
      related_files:
        - go-git-worktree-support.md
      notes: ""
journal:
    - timestamp: 2025-10-24T19:49:38.984333-07:00
      type: decision
      content: 'Decided: worktrees live in .sow/worktrees/ (requires gitignore)'
    - timestamp: 2025-10-24T19:49:39.754175-07:00
      type: decision
      content: 'Decided: use .sow/worktrees/<branch_name> as natural session index'
    - timestamp: 2025-10-24T19:49:40.506284-07:00
      type: decision
      content: 'Decided: main repo stays clean, worktrees run sessions'
    - timestamp: 2025-10-24T20:13:37.717266-07:00
      type: insight
      content: 'Key insight: worktrees have .git file (not dir), so findRepoRoot() naturally stops at worktree boundary'
    - timestamp: 2025-10-24T20:13:38.629776-07:00
      type: insight
      content: No path resolution changes needed - each worktree has own .sow/, discovery works unchanged
    - timestamp: 2025-10-24T20:13:39.535498-07:00
      type: decision
      content: 'Exploration summaries: .sow/knowledge/explorations/ for indexed summaries of past explorations'
    - timestamp: 2025-10-27T10:01:28.032469-07:00
      type: insight
      content: 'Key insight: sow.Context is natural injection point - worktree created after branch determination, new context for worktree operations'
    - timestamp: 2025-10-27T10:39:03.269545-07:00
      type: decision
      content: 'Lifecycle is straightforward: worktrees add one cleanup step (remove worktree + delete branch). No fundamental complexity beyond current branch cleanup.'
    - timestamp: 2025-10-27T10:47:40.332139-07:00
      type: insight
      content: go-git v5 and jmgilman/go/git wrapper do NOT support git worktree operations. Must shell out to git CLI for add/list/remove. go-git can READ existing worktrees created by CLI.
    - timestamp: 2025-10-27T14:27:45.952081-07:00
      type: decision
      content: Exploration completed. Summary created at .sow/knowledge/explorations/worktrees-2025-01.md. Ready for implementation in github.com/jmgilman/go/git wrapper.
    - timestamp: 2025-10-27T14:40:20.977083-07:00
      type: decision
      content: Reframed summary as informational research document rather than design/implementation plan
files:
    - path: worktree-isolation-model.md
      description: How worktrees share git data but isolate working directories and index
      tags:
        - worktrees
        - isolation
        - git
        - filesystem
      created_at: 2025-10-24T19:36:48.302456-07:00
    - path: multi-session-state-management.md
      description: How to handle multiple .sow/project contexts with worktrees, state partitioning, and session discovery
      tags:
        - worktrees
        - state-management
        - sessions
        - architecture
      created_at: 2025-10-24T19:50:35.129731-07:00
    - path: worktree-integration-patterns.md
      description: How to integrate worktrees at context boundary - command flow, context creation, and opt-in approaches
      tags:
        - worktrees
        - integration
        - architecture
        - context
        - commands
      created_at: 2025-10-27T10:01:25.854559-07:00
    - path: go-git-worktree-support.md
      description: Comprehensive analysis of go-git and jmgilman/go/git worktree support - requires git CLI shelling
      tags:
        - go-git
        - worktrees
        - implementation
        - git-cli
        - limitations
      created_at: 2025-10-27T10:47:38.447329-07:00
